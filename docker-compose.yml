version: '3.8'

services:
  devops_service:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=app.py
      - PYTHONUNBUFFERED=1
      - JIRA_URL=${JIRA_URL}
      - JIRA_EMAIL=${JIRA_EMAIL}
      - JIRA_API_TOKEN=${JIRA_API_TOKEN}
      - LLAMA_SERVER_URL=${LLAMA_SERVER_URL}
      - AI_SERVICE_URL=${AI_SERVICE_URL}
      - AI_SERVICE_TOKEN=${AI_SERVICE_TOKEN}
      - CI_AGENT_URL=http://ci_agent:9001
      - HELM_AGENT_URL=http://helm_agent:9002
      - DEPLOY_AGENT_URL=http://deploy_agent:9003
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - monitoring_network

  ci_agent:
    build: ./agents/ci_agent
    ports:
      - "9001:9001"
    volumes:
      - ./agents/ci_agent:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - monitoring_network

  helm_agent:
    build: ./agents/helm_agent
    ports:
      - "9002:9002"
    volumes:
      - ./agents/helm_agent:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - monitoring_network

  deploy_agent:
    build: ./agents/deploy_agent
    ports:
      - "9003:9003"
    volumes:
      - ./agents/deploy_agent:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - monitoring_network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - monitoring_network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - monitoring_network

networks:
  monitoring_network:
    driver: bridge

volumes:
  grafana_data: